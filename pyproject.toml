[build-system]
requires = ["maturin>=1.5,<2.0"]
build-backend = "maturin"

[project]
name = "hobachi"
authors = [
    { name = "Greg Pauloski", email = "jgpauloski@uchicago.edu" }
]
maintainers = [
    { name = "Greg Pauloski", email = "jgpauloski@uchicago.edu" }
]
description = "Python object proxy with just-in-time resolution implemented in Rust"
requires-python = ">=3.9"
license = { text = "MIT" }
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Rust",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
]
dynamic = ["readme", "version"]

[project.optional-dependencies]
dev = [
    "maturin",
    "mypy",
    "pre-commit",
    "pytest",
    "ruff>=0.2.0",
]

[project.urls]
Homepage = "https://github.com/gpauloski/hobachi"
Source = "https://github.com/gpauloski/hobachi"

[tool.codespell]
skip = """
.git,
.github,
__pycache__,
build,
dist,
.*egg-info
target
"""

[tool.maturin]
features = ["pyo3/extension-module"]

[tool.mypy]
python_version = "3.12"
plugins = ["mypy.plugins.proper_plugin"]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "tests.*"
allow_incomplete_defs = true
allow_untyped_defs = true

[tool.ruff]
line-length = 79
target-version = "py39"

[tool.ruff.format]
indent-style = "space"
quote-style = "single"

[tool.ruff.lint]
select = ["F", "E", "I", "N", "UP", "YTT", "B", "A", "COM", "C4", "ISC", "PT", "Q", "T10", "SIM", "PLE", "PLW", "RUF"]

[tool.ruff.lint.flake8-pytest-style]
parametrize-values-type = "tuple"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.isort]
force-single-line = true
known-first-party = ["hobachi", "test"]
order-by-type = false
required-imports = ["from __future__ import annotations"]
